version: '3'

services:
  jenkins:
    build:
      context: ./jenkins-server
      dockerfile: Dockerfile
      args:
        DOCKER_GID: ${DOCKER_GID:-976}
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - "./jenkins-server/casc_configs:/casc_configs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    environment:
      - CASC_JENKINS_CONFIG=/casc_configs
      - ANCHORE_CLI_USER=admin
      - ANCHORE_CLI_PASS=4dm1n
      - ANCHORE_CLI_URL=http://anchore-engine:8228/v1
    networks:
      - ci

  anchore-engine:
    image: anchore/anchore-engine:v0.3.1
    depends_on:
      - anchore-db
    volumes:
      - ./anchore/config:/config/:Z
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    environment:
      - ANCHORE_ADMIN_PASSWORD=4dm1n
      - ANCHORE_CLI_USER=admin
      - ANCHORE_CLI_PASS=4dm1n
      - ANCHORE_CLI_URL=http://anchore-engine:8228/v1
      - ANCHORE_HOST_ID=anchore-engine
      - ANCHORE_ENDPOINT_HOSTNAME=anchore-engine
      - ANCHORE_DB_HOST_ID=anchore-db
      - ANCHORE_DB_USER=postgres
      - ANCHORE_DB_PASS=mysecretpassword
    networks:
      - ci

  anchore-db:
    image: postgres:9.6.11-alpine
    #volumes:
    #  - "./anchore/db:/var/lib/postgresql/data/pgdata/:Z"
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
      - PGDATA=/var/lib/postgresql/data/pgdata/
    logging:
      driver: "json-file"
      options:
        max-size: 50m
    networks:
      - ci

networks:
  ci:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1400